# named list of all robots
robots:
  # cf:
  #   enabled: false
  #   uri: radio://0/80/2M/E7E7E7E7E7
  #   # uri: udp://0.0.0.0:19850
  #   # uri: usb://0
  #   initial_position: [0.0, 0.0, 0.0]
  #   type: cf  # see robot_types
  #   # firmware_params:
  #   #   kalman:
  #   #     pNAcc_xy: 1.0 # default 0.50x

  cf_1:
    enabled: true
    uri: radio://0/100/2M/E7E7E7E701
    #uri: udp://0.0.0.0:19850
    initial_position: [0.0, 0.0, 0.0]
    type: cf_sim  # see robot_types
    # firmware_params:
      # posCtlPid:
        #xKp: 18.0 # Proportional gain
        # xKi: 0.5 # Integral gain
        # xKd: 4.0 # Derivative gain 
        
  cf_2:
    enabled: false
    uri: radio://0/100/2M/E7E7E7E707
    #uri: udp://0.0.0.0:19851
    initial_position: [-0.3,0.0, 0.0]
    type: cf_sim2  # see robot_types

  cf_3:
    enabled: false
    uri: radio://0/100/2M/E7E7E7E703
    #uri: udp://0.0.0.0:19852
    initial_position: [-0.5, 0.5, 0.0]
    type: cf_sim  # see robot_types

  cf_4:
    enabled: false
    #uri: radio://0/100/2M/E7E7E7E70B
    uri: udp://0.0.0.0:19853
    initial_position: [0.3,0.0,0.0]
    type: cf_sim  # see robot_types

  cf_5:
    enabled: false
    uri: radio://0/100/2M/E7E7E7E705
    initial_position: [-0.5, 0.0, 0.0]
    type: cf_sim  # see robot_types

  cf_6:
    enabled: false
    uri: radio://0/100/2M/E7E7E7E706
    initial_position: [0.0, -0.6, 0.0]
    type: cf_sim  # see robot_types

  cf_7:
    enabled: false
    uri: radio://0/100/2M/E7E7E7E707
    initial_position: [0.0, 0.0, 0.0]
    type: cf_sim  # see robot_types

  cf_8:
    enabled: false
    uri: radio://0/100/2M/E7E7E7E708
    initial_position: [0.0, 0.5, 0.0]
    type: cf_sim  # see robot_types

  cf_9:
    enabled: false
    uri: radio://0/100/2M/E7E7E7E709
    initial_position: [-0.5, 0.5, 0.0]
    type: cf_sim  # see robot_types

  cf_10:
    enabled: false
    uri: radio://0/100/2M/E7E7E7E70A
    initial_position: [ 0.0, -0.5,0.0]
    type: cf_sim  # see robot_types

  cf_11:
    enabled: false
    uri: radio://0/100/2M/E7E7E7E70B
    initial_position: [0.5, 0.5, 0.0]
    type: cf_sim  # see robot_types

  cf_12:
    enabled: false
    uri: udp://0.0.0.0:19861
    initial_position: [2.0, 1.0, 0.0]
    type: cf_sim  # see robot_types
  
  obstacle:
    enabled: false
    initial_position: [0.0, 0.0, 1.32]
    type: marker  # see robot_types

 
# Definition of the various robot types
robot_types:
  cf_sim:
    motion_capture:
      enabled: true
      # only if enabled; see motion_capture.yaml
      marker: mocap_deck
      dynamics: default
    big_quad: false
    # battery:
    #   voltage_warning: 3.8  # V
    #   voltage_critical: 3.7 # V
    firmware_logging:
      enabled: true
      default_topics:
        pose:
          frequency: 50
      custom_topics:
        position:
          frequency: 50
          vars: ["stateEstimate.x", "stateEstimate.y", "stateEstimate.z"]
        velocity:
          frequency: 50
          vars: ["stateEstimate.vx", "stateEstimate.vy", "stateEstimate.vz"]
        
        # pos_innov:
        #   frequency: 50
        #   vars: ["kalman.posInnoX", "kalman.posInnoY", "kalman.posInnoZ"]
        
  cf_sim2:
    motion_capture:
      enabled: true
      # only if enabled; see motion_capture.yaml
      marker: mocap_deck2
      dynamics: default
    big_quad: false
    # battery:
    #   voltage_warning: 3.8  # V
    #   voltage_critical: 3.7 # V
    firmware_logging:
      enabled: true
      default_topics:
        pose:
          frequency: 50
      custom_topics:
        velocity:
          frequency: 50
          vars: ["stateEstimate.vx", "stateEstimate.vy", "stateEstimate.vz"]
  marker:
    connection: false
    motion_capture:
      enabled: true
      marker: 4_markers_object
      dynamics: default
    firmware_logging:
      enabled: true
      default_topics:
        pose:
          frequency: 50
      custom_topics:
      #   position:
      #     frequency: 50
      #     vars: ["stateEstimate.x", "stateEstimate.y", "stateEstimate.z"]
        velocity:
          frequency: 50
          vars: ["stateEstimate.vx", "stateEstimate.vy", "stateEstimate.vz"]
        attitude:
          frequency: 50
          vars: ["stateEstimate.roll", "stateEstimate.pitch", "stateEstimate.yaw"]
        # pos_innov:
        #   frequency: 50
        #   vars: ["kalman.posInnoX", "kalman.posInnoY", "kalman.posInnoZ"]
    
 
# global settings for all robots
all:
  # firmware logging for all drones (use robot_types/type_name to set per type, or
  # robots/drone_name to set per drone)
  # firmware_logging:
  #   enabled: false
  #   default_topics:
  #    # remove to disable default topic
  #     pose:
  #       frequency: 10 # Hz
      # odom:
      #   frequency: 100 # Hz
    # custom_topics:
    #  topic_name1:
    #    frequency: 10 # Hz
    #    vars: ["kalman.stateX", "kalman.stateY", "kalman.stateZ"]
    #  topic_name2:
    #    frequency: 1 # Hz
    #    vars: ["stabilizer.roll", "stabilizer.pitch", "stabilizer.yaw"]
  # firmware parameters for all drones (use robot_types/type_name to set per type, or
  # robots/drone_name to set per drone)
  firmware_params:
    commander:
      enHighLevel: 1
    stabilizer:
      estimator: 2 # 1: complementary, 2: kalman
      controller: 1 # 1: PID, 2: mellinger
    # ring:
    #   effect: 16 # 6: double spinner, 7: solid color, 16: packetRate
    #   solidBlue: 255 # if set to solid color
    #   solidGreen: 0 # if set to solid color
    #   solidRed: 0 # if set to solid color
    #   headlightEnable: 0
    locSrv:
      extPosStdDev: 1e-3
      extQuatStdDev: 0.5e-1
    # kalman:
    #   resetEstimation: 1
  broadcasts:
    num_repeats: 15 # number of times broadcast commands are repeated
    delay_between_repeats_ms: 1 # delay in milliseconds between individual repeats
